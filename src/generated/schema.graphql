### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Attack {
  damage: Int!
  name: String!
  type: Nature!
}

type Attacks {
  fast: [Attack]!
  special: [Attack]!
}

enum Class {
  Legendary
  Mythic
  Normal
  Rare
}

enum Classification {
  Atrocious
  Ball
  Balloon
  Barrier
  Bat
  Beak
  Bird
  Bivalve
  BoneKeeper
  BubbleJet
  Butterfly
  ClassyCat
  Cobra
  Coconut
  Cocoon
  Dopey
  Dragon
  Drill
  Duck
  Egg
  Electric
  Evolution
  Fairy
  FireHorse
  Fish
  Flame
  Flower
  Flycatcher
  Fossil
  Fox
  Freeze
  Gas
  Genetic
  Goldfish
  Hairy
  HermitCrab
  Humanshape
  Hypnosis
  Insect
  Jellyfish
  Kicking
  Legendary
  Licking
  Lightning
  Lizard
  Lonely
  Magnet
  Mantis
  Megaton
  Mole
  Mouse
  Mushroom
  Mysterious
  NewSpecies
  Parent
  PigMonkey
  Pincer
  PoisonBee
  PoisonGas
  PoisonMoth
  PoisonPin
  Psi
  Punching
  Puppy
  RiverCrab
  Rock
  RockSnake
  ScratchCat
  SeaLion
  Seed
  Shadow
  Shellfish
  Sleeping
  Sludge
  Snake
  Spikes
  Spiral
  Spitfire
  Stagbeetle
  Starshape
  Superpower
  Tadpole
  TinyBird
  TinyTurtle
  Transform
  Transport
  TripleBird
  Turtle
  TwinBird
  Vine
  Virtual
  Weed
  WildBull
  WildDuck
  Worm
}

type EvolutionRequirement {
  amount: Int!
  name: String!
}

type MinMax {
  maximum: String!
  minimum: String!
}

type Mutation {
  TriggerFavorite(pokemonId: Int): Pokemon!
}

enum Nature {
  Bug
  Dark
  Dragon
  Electric
  Fairy
  Fighting
  Fire
  Flying
  Ghost
  Grass
  Ground
  Ice
  Normal
  Poison
  Psychic
  Rock
  Steel
  Water
}

type Pokemon {
  attacks: Attacks!
  class: Class!
  classification: Classification!
  commonCaptureArea: String
  evolutionRequirements: EvolutionRequirement
  evolutions: [Pokemon]!
  favorite: Boolean!
  fleeRate: Float!
  height: MinMax!
  id: Int!
  maxCP: Int!
  maxHP: Int!
  name: String!
  previousEvolutions: [Pokemon]!
  resistances: [Nature]!
  types: [Nature]!
  weaknesses: [Nature]!
  weight: MinMax!
}

type PokemonList {
  count: Int!
  list: [Pokemon]!
  totalPages: Int!
}

type Query {
  ListPokemon(favorite: Boolean, limit: Int, name: String, nature: Nature, skip: Int): PokemonList!
  PokemonNatures: [Nature]!
  SearchPokemon(name: String, number: Int): Pokemon
}